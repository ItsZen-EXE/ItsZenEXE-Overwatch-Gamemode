variables
{
	player:
		1: IsUsingAbility
		5: AbilityVariableChase_I
}

disabled rule("[Bastion] Turret Ammo Regen")
{
	event
	{
		Ongoing - Each Player;
		All;
		Bastion;
	}

	conditions
	{
		Event Player.IsUsingAbility[1] == False;
		Is Alive(Event Player) == True;
	}

	actions
	{
		Chase Player Variable At Rate(Event Player, AbilityVariableChase_I, 100, 6.250, None);
		While(Event Player.IsUsingAbility[1] == False);
			Set Ability Resource(Event Player, Button(Secondary Fire), Event Player.AbilityVariableChase_I);
			Set Ability Cooldown(Event Player, Button(Ability 1), Event Player.AbilityVariableChase_I);
			Wait(0.016, Ignore Condition);
		End;
		Set Ability Resource(Event Player, Button(Secondary Fire), Event Player.AbilityVariableChase_I);
		Set Ability Cooldown(Event Player, Button(Ability 1), Event Player.AbilityVariableChase_I);
	}
}

disabled rule("[Bastion] Turret Ability (Low Ammo Locks Abillity)")
{
	event
	{
		Ongoing - Each Player;
		All;
		Bastion;
	}

	conditions
	{
		Event Player.AbilityVariableChase_I != 100;
		Event Player.IsUsingAbility[1] == False;
		Is Alive(Event Player) == True;
	}

	actions
	{
		Disallow Button(Event Player, Ability 1);
		Wait(0.016, Ignore Condition);
		Set Ability 1 Enabled(Event Player, False);
	}
}

disabled rule("[Bastion] Turret Ammo Usage")
{
	event
	{
		Ongoing - Each Player;
		All;
		Bastion;
	}

	conditions
	{
		Is Firing Primary(Event Player) == True;
		Event Player.IsUsingAbility[1] == True;
		Is Alive(Event Player) == True;
	}

	actions
	{
		Chase Player Variable At Rate(Event Player, AbilityVariableChase_I, 0, 20, None);
		While(Is Firing Primary(Event Player) == True);
			Set Ability Resource(Event Player, Button(Secondary Fire), Event Player.AbilityVariableChase_I);
			Wait(0.016, Ignore Condition);
		End;
		Set Ability Resource(Event Player, Button(Secondary Fire), Event Player.AbilityVariableChase_I);
	}
}

disabled rule("[Bastion] Ammo Stop Using")
{
	event
	{
		Ongoing - Each Player;
		All;
		Bastion;
	}

	conditions
	{
		Is Firing Primary(Event Player) != True;
		Event Player.IsUsingAbility[1] == True;
		Is Alive(Event Player) == True;
	}

	actions
	{
		Stop Chasing Player Variable(Event Player, AbilityVariableChase_I);
	}
}
