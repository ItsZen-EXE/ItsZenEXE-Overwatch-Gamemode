
rule("Tutorial: D.Va")
{
	event
	{
		Ongoing - Each Player;
		All;
		D.Va;
	}

	conditions
	{
		Is Button Held(Event Player, Interact) == True;
		Is Alive(Event Player) == True;
	}

	actions
	{
		Create HUD Text(Event Player, Null, Null, Custom String(
			"D.Va can climb ledges when outside of MEKA. Face a ledge and hold Jump and Forward. "), Right, 5, Sky Blue, White, White,
			Visible To, Default Visibility);
		Event Player.PlayerInfoArray[4] = Last Text ID;
		Create HUD Text(Event Player, Null, Null, Custom String(
			"{0}Eject: Crouch+Interact to Eject from MEKA. Half of MEKA health is preserved as Call Mech charge (up to 50%).", Icon String(
			Warning)), Right, 6, Sky Blue, White, Yellow, Visible To, Default Visibility);
		Event Player.PlayerInfoArray[5] = Last Text ID;
	}
}

rule("Tutorial: Doomfist")
{
	event
	{
		Ongoing - Each Player;
		All;
		Doomfist;
	}

	conditions
	{
		Is Button Held(Event Player, Interact) == True;
		Is Alive(Event Player) == True;
	}

	actions
	{
		Create HUD Text(Event Player, Null, Null, Custom String("This hero can climb ledges. Face a ledge and hold Jump and Forward. "),
			Right, 5, Sky Blue, White, White, Visible To, Default Visibility);
		Event Player.PlayerInfoArray[4] = Last Text ID;
		Create HUD Text(Event Player, Null, Null, Custom String(
			"{0}Rocket Punch wall damage drops off based on distance travelled by victim. (Punch + Wall Damage at 10 meters = 150 damage).",
			Ability Icon String(Hero(Doomfist), Button(Secondary Fire))), Right, 6, Sky Blue, White, Turquoise, Visible To,
			Default Visibility);
		Event Player.PlayerInfoArray[5] = Last Text ID;
		Create HUD Text(Event Player, Null, Null, Custom String("{0}Rising Uppercut cooldown begins when touching the ground (0.75s).",
			Ability Icon String(Hero(Doomfist), Button(Ability 1)), Ability Icon String(Hero(Doomfist), Button(Ability 2))), Right, 7,
			Lime Green, White, Lime Green, Visible To, Default Visibility);
		Event Player.PlayerInfoArray[6] = Last Text ID;
		Create HUD Text(Event Player, Null, Null, Custom String("Best Defense no longer triggers on {0}Rising Uppercut",
			Ability Icon String(Hero(Doomfist), Button(Ability 1)), Ability Icon String(Hero(Doomfist), Button(Ability 2))), Right, 8,
			Sky Blue, White, Lime Green, Visible To, Default Visibility);
		Event Player.PlayerInfoArray[7] = Last Text ID;
	}
}

rule("Tutorial: McCree")
{
	event
	{
		Ongoing - Each Player;
		All;
		McCree;
	}

	conditions
	{
		Is Button Held(Event Player, Interact) == True;
		Is Alive(Event Player) == True;
	}

	actions
	{
		Create HUD Text(Event Player, Null, Null, Custom String("This hero can climb ledges. Face a ledge and hold Jump and Forward. "),
			Right, 4, Sky Blue, White, White, Visible To, Default Visibility);
		Event Player.PlayerInfoArray[4] = Last Text ID;
		Create HUD Text(Event Player, Null, Null, Custom String(
			"{0}Your shots have stopping power and recoil pusback. Slower fire rate on primary.", Ability Icon String(Hero(McCree), Button(
			Primary Fire))), Right, 6, Sky Blue, White, Aqua, Visible To, Default Visibility);
		Event Player.PlayerInfoArray[5] = Last Text ID;
		Create HUD Text(Event Player, Null, Null, Custom String("{0}Fan the Hammer is automatic and can be interrupted manually.",
			Ability Icon String(Hero(McCree), Button(Secondary Fire))), Right, 7, Sky Blue, White, Aqua, Visible To, Default Visibility);
		Event Player.PlayerInfoArray[6] = Last Text ID;
		Create HUD Text(Event Player, Null, Null, Custom String(
			"{0}Combat Roll has extended potential distance. Press Crouch while rolling to 'Combat Duck'.", Ability Icon String(Hero(
			McCree), Button(Ability 1))), Right, 8, Sky Blue, White, Lime Green, Visible To, Default Visibility);
		Event Player.PlayerInfoArray[7] = Last Text ID;
		Create HUD Text(Event Player, Null, Null, Custom String(
			"{0}Combat roll cooldown gets shortened by one second for each critical hit.", Ability Icon String(Hero(McCree), Button(
			Ability 1))), Right, 9, Sky Blue, White, Lime Green, Visible To, Default Visibility);
		Event Player.PlayerInfoArray[8] = Last Text ID;
	}
}

rule("Tutorial: Reinhardt")
{
	event
	{
		Ongoing - Each Player;
		All;
		Reinhardt;
	}

	conditions
	{
		Is Button Held(Event Player, Interact) == True;
		Is Alive(Event Player) == True;
	}

	actions
	{
		Create HUD Text(Event Player, Null, Null, Custom String("{0}Charge can be cancelled with Melee. Can Jump during Charge.",
			Ability Icon String(Hero(Reinhardt), Button(Ability 1))), Right, 6, Sky Blue, White, Lime Green, Visible To,
			Default Visibility);
		Event Player.PlayerInfoArray[5] = Last Text ID;
		Create HUD Text(Event Player, Null, Null, Custom String(
			"{0}Earthshatter Knockdown duration scales with max altitude during casting. ", Ability Icon String(Hero(Reinhardt), Button(
			Ability 1))), Right, 7, Sky Blue, White, Purple, Visible To, Default Visibility);
		Event Player.PlayerInfoArray[6] = Last Text ID;
	}
}

rule("Tutorial: Zenyatta")
{
	event
	{
		Ongoing - Each Player;
		All;
		Zenyatta;
	}

	conditions
	{
		Is Button Held(Event Player, Interact) == True;
		Is Alive(Event Player) == True;
	}

	actions
	{
		Create HUD Text(Event Player, Null, Null, Custom String("This hero can climb ledges. Face a ledge and hold Jump and Forward. "),
			Right, 5, Sky Blue, White, White, Visible To, Default Visibility);
		Event Player.PlayerInfoArray[4] = Last Text ID;
		Create HUD Text(Event Player, Null, Null, Custom String(
			"{0}Passive: Have decreased personal gravity while holding Jump. Increased gravity while holding Crouch.", Ability Icon String(
			Hero(Zenyatta), Button(Ultimate))), Right, 6, Sky Blue, White, Yellow, Visible To, Default Visibility);
		Event Player.PlayerInfoArray[5] = Last Text ID;
	}
}
